swagger: "2.0"
info:
  title: RideManagementService
  description: The ride management service describes the functionality of uber application for the user.
  version: 1.0.0
host: www.localhost:8080
#
#                    created
#                    processing
#                    assigned
#                    started
#                    ended
#                    completed
#                    cancelled
#userid: Integer
#password: String
#langitude: Double
#latitude: Double
#langitude: Double
#latitude: Double
#baseLocation: String

schemes:
  - https
  - http
paths:
  /profile/{rider_id}:
    get:
      summary: "View Rider's detail"
      description: "Rider's with valid id will be shown"
      parameters:
        - in: path
          name: rider_id
          required: true
          schema:
            type: string

      responses:
        200:
          description: "bh"
          content:
            application/json:
              schema:
                type: object
                properties:
                  first_name:
                    type: string


#put:
#  Summary: "Update the Rider's profile"
#  RequestBody:{
#  email: Strings
#  phonenumber: number
#  ResponseBody:
#    200:{"Profile Updated"}
#    400:{"Bad Request"}

    put:
      summary: Update Rider's Profile
      description: Rider with valid rider Id can


  /viewRide/{rideid}:
    get:
      description: to view the ongoing rides.
      parameters:
        -in: path
        name: user.userId
        required: true
        type: Integer

        -in: path
        name: user.userRideState
        required: true
        type: String

      responses:
        200:
          description: Output the ongoing ride.
        203:
          description: User session expired/ not authenticated.


  /updateRide/{user}:
    put:
      description: Api should update the status of ride.
      parameters:
        -id: path
        name: user.userId
        required: true
        type: Integer

        -id: path
        name: user.userRideState
        required: true
        type: String
      responses:


#  /searchVehicle/{id}:
#    get:
#      description: List the vehicles with fare.
#      parameters:
#        -id: path
#        name: id.longitude
#        required: true
#        type: Double
#
#        -id: path
#        name: id.latitude
#        required: true
#        type: Double
#
#      responses:
#        200:
#          description: List the 2, 3 and 4 weeler vehicles.
#        203:
#          description: User session expired/ not authenticated.

  /bookRide{userId}:
    post:
      summary: start the ride
      parameters:

#
#        start end latitude longitude
        -id: path
        name: userid
        requied: true
        type: Integer

        -id: path
        name: user.userRideState
        requied: true
        type: String
      responses:
        200:
          description: Ride booked for the user.
        203:
          description: User session expired/ not authenticated.

  /cancelRide{id}:
    post:
      summary: cancel the on going ride.
      parameters:
        -id: path
        name: id
        requied: true
        type: Integer
      responses:
        200:
          description: Ride of the user cancelled.
        203:
          description: User session expired/ not authenticated.

  /endRide{id}:
    post:
      summary: End the ride
      parameters:
        -id: path
        name: id
        requied: true
        type: Integer
      responses:
        200:
          description: Ride successfully ended.
        203:
          description: User session expired/ not authenticated.

  /history{id}:
    get:
      summary: fetch ride history.
      parameters:
        -id: path
        name: id
        requied: true
        type: Integer
      responses:
        200:
          description: List down all ride history.
        203:
          description: User session expired/ not authenticated.
